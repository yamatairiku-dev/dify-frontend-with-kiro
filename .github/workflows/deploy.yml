name: Deploy Dify Workflow Frontend

on:
  push:
    branches:
      - main
      - develop
      - staging
  pull_request:
    branches:
      - main
      - develop

env:
  NODE_VERSION: '18'

jobs:
  # Test job - runs on all branches and PRs
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run type checking
        run: npm run type-check
        continue-on-error: true
        
      - name: Run linting
        run: npm run lint
        continue-on-error: true
        
      - name: Run unit tests
        run: npm run test
        continue-on-error: true
        
      - name: Run integration tests
        run: npm run test:integration
        continue-on-error: true
          
  # Security scan job (optional)
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
          
  # Build job - runs on main, develop, and staging branches
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging')
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Determine environment
        id: env
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=development" >> $GITHUB_OUTPUT
          fi
          
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          VITE_MODE: ${{ steps.env.outputs.environment }}
          VITE_AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID || 'dummy-azure-client-id' }}
          VITE_AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID || 'dummy-azure-tenant-id' }}
          VITE_GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID || 'dummy-github-client-id' }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID || 'dummy-google-client-id' }}
          VITE_DIFY_API_BASE_URL: ${{ secrets.DIFY_API_BASE_URL || 'https://api.example.com' }}
          VITE_OAUTH_REDIRECT_URI: ${{ secrets.OAUTH_REDIRECT_URI || 'https://app.example.com/callback' }}
          VITE_GIT_COMMIT: ${{ github.sha }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ steps.env.outputs.environment }}
          path: dist/
          retention-days: 30
            
  # Simple deployment notification
  deploy-notification:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    
    steps:
      - name: Deployment notification
        run: |
          echo "ðŸš€ Build completed successfully!"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Build artifacts are ready for deployment"